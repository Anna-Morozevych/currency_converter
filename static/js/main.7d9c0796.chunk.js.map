{"version":3,"sources":["api.tsx","components/Converter/Converter.tsx","components/Header/Header.tsx","App.tsx","index.tsx"],"names":["BASE_URL","getExchangeRate","from","to","amount","fetch","then","response","json","Converter","useState","currentRate","setCurrentRate","currencyNames","setCurrencyNames","amountFrom","setAmountFrom","amountTo","setAmountTo","currencyFrom","setCurrencyFrom","currencyTo","setCurrencyTo","useEffect","keys","Object","rates","result","info","rate","className","Box","TextField","name","id","type","label","variant","value","onChange","event","target","toString","match","helperText","select","currency","map","option","MenuItem","Alert","severity","Header","React","memo","usdRate","setUsdRate","eurRate","setEurRate","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+UAAMA,G,MAAW,yCAGJC,EAAkB,SAACC,EAAcC,GAA4B,IAAhBC,EAAe,uDAAN,EACjE,OAAOC,MAAM,GAAD,OAAIL,EAAJ,iBAAqBE,EAArB,eAAgCC,EAAhC,mBAA6CC,IACtDE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,W,OCMlBC,EAAsB,WACjC,MAAsCC,mBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA0CF,mBAAmB,IAA7D,mBAAOG,EAAP,KAAsBC,EAAtB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAAgCN,mBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAwCR,mBAAS,IAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KAEAC,qBAAU,WDVHlB,MARiB,wCASrBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCWxBF,MAAK,SAAAC,GACJ,IAAMiB,EAAOC,OAAOD,KAAKjB,EAASmB,OAElCZ,EAAiBU,GACjBJ,EAAgB,OAChBE,EAAc,OAEdrB,EAAgB,MAAO,OACpBK,MAAK,SAAAqB,GACJf,EAAee,EAAOC,KAAKC,MAC3BX,EAAYH,EAAaY,EAAOC,KAAKC,cAG5C,IAEHN,qBAAU,WACRtB,EAAgBkB,EAAcE,GAC3Bf,MAAK,SAAAqB,GACJf,EAAee,EAAOC,KAAKC,MAC3BX,EAAYH,EAAaY,EAAOC,KAAKC,WAExC,CAACV,EAAcE,IA8BlB,OACE,0BAASS,UAAU,YAAnB,UACE,oBAAIA,UAAU,mBAAd,gCAGA,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,kDAAf,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,aACLC,GAAG,iBACHC,KAAK,OACLC,MAAM,SACNC,QAAQ,WACRC,MAAOvB,EACPwB,SAAU,SAACC,GA3CE,IAACpC,MA2CyBoC,EAAMC,OAAOH,OA1ClDI,WAAWC,MAAM,WAI7BzB,EAAYd,EAASO,GACrBK,EAAcZ,KAsCJwC,WAAW,0BAGf,cAACb,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,eACLC,GAAG,2BACHW,QAAM,EACNT,MAAM,WACNE,MAAOnB,EACPoB,SAAU,SAACC,GAAD,OA7CMM,EA6CwBN,EAAMC,OAAOH,MA5C/DpB,EAAYH,EAAaJ,QACzBS,EAAgB0B,GAFS,IAACA,GA8ChBF,WAAW,8BAPb,SASG/B,EAAckC,KAAI,SAACC,GAAD,OACjB,cAACC,EAAA,EAAD,CAAuBX,MAAOU,EAA9B,SACGA,GADYA,aAQvB,sBAAKlB,UAAU,gDAAf,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,WACLC,GAAG,iBACHC,KAAK,OACLC,MAAM,SACNC,QAAQ,WACRC,MAAOrB,EACPsB,SAAU,SAACC,GA7DA,IAACpC,MA6DyBoC,EAAMC,OAAOH,OA5DhDI,WAAWC,MAAM,WAI7B3B,EAAcZ,EAASO,GACvBO,EAAYd,KAwDFwC,WAAW,0BAGf,cAACb,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CACEC,KAAK,aACLC,GAAG,2BACHW,QAAM,EACNT,MAAM,WACNE,MAAOjB,EACPkB,SAAU,SAACC,GAAD,OA/DIM,EA+DwBN,EAAMC,OAAOH,MA9D7DpB,EAAYH,EAAaJ,QACzBW,EAAcwB,GAFS,IAACA,GAgEdF,WAAW,8BAPb,SASG/B,EAAckC,KAAI,SAACC,GAAD,OACjB,cAACC,EAAA,EAAD,CAAuBX,MAAOU,EAA9B,SACGA,GADYA,gBASzB,cAACE,EAAA,EAAD,CAAOC,SAAS,OAAhB,gCACmBxC,SC5IZyC,G,MAASC,IAAMC,MAAK,WAC/B,MAA8B5C,qBAA9B,mBAAO6C,EAAP,KAAgBC,EAAhB,KACA,EAA8B9C,qBAA9B,mBAAO+C,EAAP,KAAgBC,EAAhB,KAYA,OAVAnC,qBAAU,WACRtB,EAAgB,MAAO,OACpBK,MAAK,SAAAC,GAAQ,OAAIiD,EAAWjD,EAASqB,KAAKC,WAC5C,CAAC0B,IAEJhC,qBAAU,WACRtB,EAAgB,MAAO,OACpBK,MAAK,SAAAC,GAAQ,OAAImD,EAAWnD,EAASqB,KAAKC,WAC5C,CAAC4B,IAGF,yBAAQ3B,UAAU,SAAlB,UACE,mBAAGA,UAAU,eAAb,8BACYyB,KAEZ,mBAAGzB,UAAU,eAAb,8BACY2B,YCnBLE,EAAgB,WAC3B,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,QCJNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7d9c0796.chunk.js","sourcesContent":["const BASE_URL = 'https://api.exchangerate.host/convert';\nconst CURRENCY_LIST_URL = 'https://api.exchangerate.host/latest';\n\nexport const getExchangeRate = (from: string, to: string, amount = 1) => {\n  return fetch(`${BASE_URL}?from=${from}&to=${to}&amount=${amount}`)\n    .then(response => response.json());\n};\n\nexport const getCurrencyList = () => {\n  return fetch(CURRENCY_LIST_URL)\n    .then(response => response.json());\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  TextField,\n  MenuItem,\n  Alert,\n} from '@mui/material';\n\nimport './Converter.scss';\nimport { getCurrencyList, getExchangeRate } from '../../api';\n\nexport const Converter: React.FC = () => {\n  const [currentRate, setCurrentRate] = useState(0);\n  const [currencyNames, setCurrencyNames] = useState<string[]>([]);\n  const [amountFrom, setAmountFrom] = useState(1);\n  const [amountTo, setAmountTo] = useState(1);\n  const [currencyFrom, setCurrencyFrom] = useState('');\n  const [currencyTo, setCurrencyTo] = useState('');\n\n  useEffect(() => {\n    getCurrencyList()\n      .then(response => {\n        const keys = Object.keys(response.rates);\n\n        setCurrencyNames(keys);\n        setCurrencyFrom('USD');\n        setCurrencyTo('UAH');\n\n        getExchangeRate('USD', 'UAH')\n          .then(result => {\n            setCurrentRate(result.info.rate);\n            setAmountTo(amountFrom * result.info.rate);\n          });\n      });\n  }, []);\n\n  useEffect(() => {\n    getExchangeRate(currencyFrom, currencyTo)\n      .then(result => {\n        setCurrentRate(result.info.rate);\n        setAmountTo(amountFrom * result.info.rate);\n      });\n  }, [currencyFrom, currencyTo]);\n\n  const handleAmountFrom = (amount: number) => {\n    if (!amount.toString().match(/[0-9]/)) {\n      return;\n    }\n\n    setAmountTo(amount * currentRate);\n    setAmountFrom(amount);\n  };\n\n  const handleCurrencyFrom = (currency: string) => {\n    setAmountTo(amountFrom * currentRate);\n    setCurrencyFrom(currency);\n  };\n\n  const handleAmountTo = (amount: number) => {\n    if (!amount.toString().match(/[0-9]/)) {\n      return;\n    }\n\n    setAmountFrom(amount / currentRate);\n    setAmountTo(amount);\n  };\n\n  const handleCurrencyTo = (currency: string) => {\n    setAmountTo(amountFrom * currentRate);\n    setCurrencyTo(currency);\n  };\n\n  return (\n    <section className=\"converter\">\n      <h1 className=\"converter__title\">\n        Currency Converter\n      </h1>\n      <div className=\"converter__form\">\n        <div className=\"converter__form-item converter__form-item--from\">\n          <Box>\n            <TextField\n              name=\"amountFrom\"\n              id=\"outlined-basic\"\n              type=\"text\"\n              label=\"Amount\"\n              variant=\"outlined\"\n              value={amountFrom}\n              onChange={(event) => handleAmountFrom(+event.target.value)}\n              helperText=\"Please enter amount\"\n            />\n          </Box>\n          <Box>\n            <TextField\n              name=\"currencyFrom\"\n              id=\"outlined-select-currency\"\n              select\n              label=\"Currency\"\n              value={currencyFrom}\n              onChange={(event) => handleCurrencyFrom(event.target.value)}\n              helperText=\"Please select your currency\"\n            >\n              {currencyNames.map((option) => (\n                <MenuItem key={option} value={option}>\n                  {option}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Box>\n        </div>\n\n        <div className=\"converter__form-item converter__form-item--to\">\n          <Box>\n            <TextField\n              name=\"amountTo\"\n              id=\"outlined-basic\"\n              type=\"text\"\n              label=\"Amount\"\n              variant=\"outlined\"\n              value={amountTo}\n              onChange={(event) => handleAmountTo(+event.target.value)}\n              helperText=\"Please enter amount\"\n            />\n          </Box>\n          <Box>\n            <TextField\n              name=\"currencyTo\"\n              id=\"outlined-select-currency\"\n              select\n              label=\"Currency\"\n              value={currencyTo}\n              onChange={(event) => handleCurrencyTo(event.target.value)}\n              helperText=\"Please select your currency\"\n            >\n              {currencyNames.map((option) => (\n                <MenuItem key={option} value={option}>\n                  {option}\n                </MenuItem>\n              ))}\n            </TextField>\n          </Box>\n        </div>\n      </div>\n\n      <Alert severity=\"info\">\n        {`Current rate ${currentRate}`}\n      </Alert>\n    </section>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getExchangeRate } from '../../api';\nimport './Header.scss';\n\nexport const Header = React.memo(() => {\n  const [usdRate, setUsdRate] = useState();\n  const [eurRate, setEurRate] = useState();\n\n  useEffect(() => {\n    getExchangeRate('USD', 'UAH')\n      .then(response => setUsdRate(response.info.rate));\n  }, [usdRate]);\n\n  useEffect(() => {\n    getExchangeRate('EUR', 'UAH')\n      .then(response => setEurRate(response.info.rate));\n  }, [eurRate]);\n\n  return (\n    <header className=\"header\">\n      <p className=\"header__item\">\n        {`USD: ₴${usdRate}`}\n      </p>\n      <p className=\"header__item\">\n        {`EUR: ₴${eurRate}`}\n      </p>\n    </header>\n  );\n});\n","import React from 'react';\nimport './App.scss';\nimport { Converter } from './components/Converter/Converter';\nimport { Header } from './components/Header/Header';\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <Header />\n      <Converter />\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}